# .github/workflows/checks.yml

name: Code Quality Checks

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest

    # services 키워드를 사용하여 MySQL 서비스를 설정
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: 1234
        options: --health-cmd="mysqladmin ping -h 127.0.0.1 -P 3306" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # `uv`를 직접 설치하는 대신, `pip`로 설치하고 가상 환경을 만듭니다.
      - name: Install uv and dependencies
        run: |
          pip install uv
          uv venv
          uv sync --dev

      # ruff, mypy, black은 이제 가상 환경에 설치되어 있으므로 `uv run`으로 실행할 수 있습니다.
      - name: Run ruff (Code quality check)
        run: |
          uv run ruff check . 

      - name: run Mypy
        run: |
          uv run mypy .

      - name: Run black (Code formatting)
        run: |
          uv run black . --check

      # db 연결을 테스트
      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin ping -h "127.0.0.1" -P 3306 --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done
      
      # .env 환경 변수 설정
      - name: Set DATABASE_URL environment variable
        run: |
          echo "DATABASE_URL=mysql+aiomysql://root:1234@127.0.0.1:3306/test" >> $GITHUB_ENV